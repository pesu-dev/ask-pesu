"""Model representing the response for the /ask route."""

from datetime import datetime

from pydantic import BaseModel, ConfigDict, Field


class AskResponseModel(BaseModel):
    """Model representing the response for the /ask route."""

    model_config = ConfigDict(strict=True)

    status: bool = Field(
        ...,
        title="Request Status",
        description="Indicates whether the request was successful.",
        json_schema_extra={"example": True},
    )

    message: str = Field(
        ...,
        title="Request Message",
        description="A human-readable message providing information about the request status.",
        json_schema_extra={"example": "Generation successful."},
    )

    timestamp: datetime = Field(
        ...,
        title="Request Timestamp",
        description="Timestamp of the request with timezone info.",
        json_schema_extra={"example": "2024-07-28T22:30:10.103368+05:30"},
    )

    latency: float = Field(
        ...,
        title="Request Latency",
        description="Time taken to process the request in seconds. Present only for successful requests.",
        json_schema_extra={"example": 1.234},
    )

    answer: str | None = Field(
        None,
        title="Generated Answer",
        description="The answer generated by the chatbot. Present only for successful requests.",
        json_schema_extra={
            "example": "Bootstrap at PES University is a week-long (typically 5-day) series "
            "of activities for freshers, usually held before regular classes commence. "
            "Its main purpose is to help students socialize, make new friends, and "
            "network with batchmates and seniors. It also allows them to explore various "
            "academic branches through simple and engaging activities."
        },
    )
